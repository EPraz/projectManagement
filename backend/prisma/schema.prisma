// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


///////////////////////////////////////////////////////
///////////////////////////////////////////////////////
model Project {
  id String @id @default(uuid())
  title String
  description String?
  createdBy String
  updatedBy String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  epics Epic[]
  users ProjectUser[]
  sprints Sprint[]
}


model Epic {
  id String @id @default(uuid())
  title String 
  description String?
  acceptanceCriteria String?
  discussion String?
  createdBy String
  updatedBy String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  projectId String
  project Project @relation(fields: [projectId], references: [id])
  features Feature[]
}

model Feature {
  id String @id @default(uuid())
  title String
  description String?
  acceptanceCriteria String?
  discussion String?
  createdBy String
  updatedBy String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  epicId String
  epic Epic @relation(fields: [epicId], references: [id] )
  tickets Ticket[]
}

model Ticket {
  id Int @id @default(autoincrement())
  title String 
  status String
  description String?
  acceptanceCriteria String?
  discussion String?
  createdBy String
  updatedBy String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  featureId String
  feature Feature @relation(fields: [featureId], references: [id])
  tasks Task[]
  sprintId  String?
  sprint    Sprint?  @relation(fields: [sprintId], references: [id])
}

model Task {
  id Int @id @default(autoincrement())
  title String
  status String
  description String?
  acceptanceCriteria String?
  discussion String?
  createdBy String
  updatedBy String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ticketId Int
  ticket Ticket @relation(fields: [ticketId], references: [id])
}

model Sprint {
  id        String   @id @default(uuid())
  name      String
  startDate DateTime
  endDate   DateTime
  projectId String
  project   Project  @relation(fields: [projectId], references: [id])
  tickets   Ticket[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


///////////////////////////////////////////////////////
///////////////////////////////////////////////////////
model User {
  id String @id @default(uuid())
  name String
  email String @unique
  password String
  role Role 
  project ProjectUser[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProjectUser {
  id String @id @default(uuid())
  userId String
  projectId String
  role Role
  user User @relation(fields: [userId], references: [id])
  project Project @relation(fields: [projectId], references: [id])
}

enum Role {
  ADMIN
  PROJECT_MANAGER
  PRODUCT_OWNER
  BUSINESS_ANALYST
  DEVELOPER
  QUALITY_ASSURANCE
}